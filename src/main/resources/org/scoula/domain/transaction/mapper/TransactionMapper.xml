<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.scoula.domain.transaction.mapper.TransactionMapper">

    <resultMap id="transactionResultMap" type="org.scoula.domain.transaction.entity.Transaction">
        <id property="transactionId" column="transaction_id"/>
        <result property="walletId" column="wallet_id"/>
        <result property="memberId" column="member_id"/>
        <result property="transactionGroupId" column="transaction_group_id"/>
        <result property="amount" column="amount"/>
        <result property="beforeBalance" column="before_balance"/>
        <result property="afterBalance" column="after_balance"/>
        <result property="transactionType" column="transaction_type"/>
        <result property="counterPartyMemberId" column="counterparty_member_id"/>
        <result property="counterPartyWalletId" column="counterparty_wallet_id"/>
        <result property="status" column="status"/>
    </resultMap>

    <select id="findById" parameterType="java.lang.Long" resultMap="transactionResultMap">
        SELECT transaction_id,
               wallet_id,
               member_id,
               transaction_group_id,
               amount,
               before_balance,
               after_balance,
               transaction_type,
               counterparty_member_id,
               counterparty_wallet_id,
               status,
               transaction_date
        FROM transaction
        WHERE transaction_id = #{transactionId}
    </select>

    <select id="findByWalletId" parameterType="java.lang.Long" resultMap="transactionResultMap">
        SELECT transaction_id,
               wallet_id,
               member_id,
               transaction_group_id,
               amount,
               before_balance,
               after_balance,
               transaction_type,
               counterparty_member_id,
               counterparty_wallet_id,
               status,
               transaction_date
        FROM transaction
        WHERE wallet_id = #{walletId}
        ORDER BY transaction_date DESC
    </select>

    <select id="findByTransactionGroupId" parameterType="java.lang.String" resultMap="transactionResultMap">
        SELECT transaction_id,
               wallet_id,
               member_id,
               transaction_group_id,
               amount,
               before_balance,
               after_balance,
               transaction_type,
               counterparty_member_id,
               counterparty_wallet_id,
               status,
               transaction_date
        FROM transaction
        WHERE transaction_group_id = #{transactionGroupId}
        ORDER BY transaction_date ASC
    </select>

    <insert id="insert" parameterType="org.scoula.domain.transaction.entity.Transaction"
            useGeneratedKeys="true" keyProperty="transactionId">
        INSERT INTO transaction (wallet_id,
                                 member_id,
                                 transaction_group_id,
                                 amount,
                                 before_balance,
                                 after_balance,
                                 transaction_type,
                                 counterparty_member_id,
                                 counterparty_wallet_id,
                                 status)
        VALUES (#{walletId},
                #{memberId},
                #{transactionGroupId},
                #{amount},
                #{beforeBalance},
                #{afterBalance},
                #{transactionType},
                #{counterPartyMemberId},
                #{counterPartyWalletId},
                #{status})
    </insert>

</mapper>